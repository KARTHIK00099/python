DESIGN AND ANALYSIS OF ALGORITHM ASSIGNMENT -2 

 

OBST: 

def optCost(freq, i, j): 

 

 

 

if j < i: 

return 0 if j == i: 

return freq[i] 

 

 

 

fsum = Sum(freq, i, j) 

 

 

 

Min = 999999999999 

 

 

 

for r in range(i, j + 1): 

cost = (optCost(freq, i, r - 1) + optCost(freq, r + 1, j)) 

if cost < Min: 

Min = cost 

 

 

 

return Min + fsum 

 

 

 

def optimalSearchTree(keys, freq, n): 

 